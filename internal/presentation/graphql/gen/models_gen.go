// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gen

type CreatePostOutput interface {
	IsCreatePostOutput()
}

type CreateSocialNetworkAccountOutput interface {
	IsCreateSocialNetworkAccountOutput()
}

type CreateSocialNetworkPageOutput interface {
	IsCreateSocialNetworkPageOutput()
}

type GetAccountAuthURLOutput interface {
	IsGetAccountAuthURLOutput()
}

type GetPagesFromSocialNetworkOutput interface {
	IsGetPagesFromSocialNetworkOutput()
}

// Базовый интерфейс ошибок
type ServiceErrorInterface interface {
	IsServiceErrorInterface()
	GetMessage() string
}

// Ошибка доступа
type AccessDeniedError struct {
	Message string `json:"message"`
}

func (AccessDeniedError) IsServiceErrorInterface() {}
func (this AccessDeniedError) GetMessage() string  { return this.Message }

// Токен и время его истечения
type AccessToken struct {
	Token     string  `json:"token"`
	ExpiresIn *string `json:"expiresIn,omitempty"`
}

type AccessTokenInput struct {
	//  Токен
	Token string `json:"token"`
	//  Действителен до
	ExpiresIn *string `json:"expiresIn,omitempty"`
}

type CreatePostInput struct {
	Page     int       `json:"page"`
	PostData *PostData `json:"postData"`
}

type CreatePostResult struct {
	Ok bool `json:"ok"`
}

func (CreatePostResult) IsCreatePostOutput() {}

type CreateSocialNetworkAccountInput struct {
	//  Название соц сети
	SocialNetwork string `json:"socialNetwork"`
	//  Информация с доступами, ключами и тп
	Credentials string `json:"credentials"`
}

type CreateSocialNetworkAccountResult struct {
	Ok bool `json:"ok"`
}

func (CreateSocialNetworkAccountResult) IsCreateSocialNetworkAccountOutput() {}

type CreateSocialNetworkPageInput struct {
	//  Аккаунт страницы
	SocialNetworkAccountID int `json:"socialNetworkAccountId"`
	//  Проект
	Project string `json:"project"`
	//  Информация о странице
	PageInfo *PageInfoInput `json:"pageInfo"`
	//  Токен
	AccessToken *AccessTokenInput `json:"accessToken,omitempty"`
}

type CreateSocialNetworkPageResult struct {
	Ok bool `json:"ok"`
}

func (CreateSocialNetworkPageResult) IsCreateSocialNetworkPageOutput() {}

type GetAccountAuthURLInput struct {
	//  Соц сеть
	SocialNetwork string `json:"socialNetwork"`
}

type GetAccountAuthURLResult struct {
	//  Url авторизации
	URL string `json:"url"`
}

func (GetAccountAuthURLResult) IsGetAccountAuthURLOutput() {}

type GetPagesFromSocialNetworkInput struct {
	//  Соц сеть
	SocialNetwork string `json:"socialNetwork"`
}

type GetPagesFromSocialNetworkResult struct {
	Pages []*SocialNetworkPage `json:"pages,omitempty"`
}

func (GetPagesFromSocialNetworkResult) IsGetPagesFromSocialNetworkOutput() {}

// Внутренняя ошибка
type InternalError struct {
	Message string `json:"message"`
}

func (InternalError) IsServiceErrorInterface() {}
func (this InternalError) GetMessage() string  { return this.Message }

func (InternalError) IsCreateSocialNetworkAccountOutput() {}

func (InternalError) IsCreateSocialNetworkPageOutput() {}

func (InternalError) IsCreatePostOutput() {}

func (InternalError) IsGetAccountAuthURLOutput() {}

func (InternalError) IsGetPagesFromSocialNetworkOutput() {}

// Страница соц сети уже существует
type PageAlreadyExistsError struct {
	Message string `json:"message"`
}

func (PageAlreadyExistsError) IsServiceErrorInterface() {}
func (this PageAlreadyExistsError) GetMessage() string  { return this.Message }

func (PageAlreadyExistsError) IsCreateSocialNetworkPageOutput() {}

type PageInfoInput struct {
	//  Идентификатор страницы в соц сети
	SocialNetworkID string `json:"socialNetworkId"`
	//  Название
	PageName string `json:"pageName"`
	//  Описание
	Description *string `json:"description,omitempty"`
	//  Обложка
	PreviewImage *string `json:"previewImage,omitempty"`
}

type PostData struct {
	Text  string  `json:"text"`
	Image *string `json:"image,omitempty"`
}

// Аккаунт в социальной сети
type SocialNetworkAccount struct {
	ID            int    `json:"id"`
	SocialNetwork string `json:"socialNetwork"`
	Credentials   string `json:"credentials"`
}

// Страница соц сети уже существует
type SocialNetworkAccountAlreadyExistsError struct {
	Message string `json:"message"`
}

func (SocialNetworkAccountAlreadyExistsError) IsServiceErrorInterface() {}
func (this SocialNetworkAccountAlreadyExistsError) GetMessage() string  { return this.Message }

func (SocialNetworkAccountAlreadyExistsError) IsCreateSocialNetworkAccountOutput() {}

// Страница в соц сети
type SocialNetworkPage struct {
	Project     string                 `json:"project"`
	PageInfo    *SocialNetworkPageInfo `json:"pageInfo"`
	AccessToken *AccessToken           `json:"accessToken,omitempty"`
}

// Информация о странице в соц сети
type SocialNetworkPageInfo struct {
	SocialNetworkID string  `json:"socialNetworkId"`
	PageName        string  `json:"pageName"`
	Description     *string `json:"description,omitempty"`
	PreviewImage    *string `json:"previewImage,omitempty"`
}

// Ошибка валидации
type ValidationError struct {
	Message string `json:"message"`
}

func (ValidationError) IsServiceErrorInterface() {}
func (this ValidationError) GetMessage() string  { return this.Message }

func (ValidationError) IsCreateSocialNetworkAccountOutput() {}

func (ValidationError) IsCreateSocialNetworkPageOutput() {}

func (ValidationError) IsCreatePostOutput() {}

func (ValidationError) IsGetAccountAuthURLOutput() {}

func (ValidationError) IsGetPagesFromSocialNetworkOutput() {}
